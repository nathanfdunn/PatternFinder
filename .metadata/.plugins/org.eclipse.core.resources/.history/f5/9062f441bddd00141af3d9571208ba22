package ui;

import static ui.CommandAppUtil.argTypeCheck;

import java.util.ArrayList;

import patternDetection.Pattern;
import ui.AppVar.AppBool;
import ui.AppVar.AppDouble;
import ui.AppVar.AppInt;
import ui.AppVar.AppNull;
import ui.AppVar.AppString;
import ui.CommandAppFunction.printFunction;
import ui.CommandAppFunction.quitFunction;
import ui.CommandAppFunction.setEchoFunction;
import ui.PatternAppVarTypes.AppPattern;

public class PatternAppFunctions {
	
	public static final AppNull NULL = AppVar.NULL;
	public static final AppString STR = AppVar.STR;
	public static final AppBool BOOL = AppVar.BOOL;
	public static final AppInt INT = AppVar.INT;
	public static final AppDouble DOUBLE = AppVar.DOUBLE;

	public static class parsePatternFunction extends CommandAppFunction {
		public parsePatternFunction(CommandApp app) {
			super(app, "parsePattern");
		}

		@Override
		public AppVar<? extends Object> call(ArrayList<AppVar<? extends Object>> args) {
			String check = argTypeCheck(args, STR);
			if (check.equals("")){
				Pattern p = PatternParser.parse( STR.convert(args.get(0)) );
				return new AppPattern(p);
			}
			
			this.app.showError(check);
			return NULL;
		}
	}
	
	
	
	public static ArrayList<CommandAppFunction> getPatternAppFunctions(CommandApp app){
		ArrayList<CommandAppFunction> out = new ArrayList<CommandAppFunction>();
		out.add(new printFunction(app));
		out.add(new quitFunction(app));
		out.add(new setEchoFunction(app));
		return out;
	}
	
	
}
