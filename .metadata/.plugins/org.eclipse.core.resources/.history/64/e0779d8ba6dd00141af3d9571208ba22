package ui;

public abstract class AppVar<T> {
//	String name;
	T obj;
//	public String getName(){
//		return name;
//	}
	
	public AppVar(T arg){ 
		this.obj = arg;
	}
	
	public T get(){
		return obj;
	}
	
	public abstract String getType();
	
	public abstract boolean instance(AppVar<? extends Object> appVar);

	
	public abstract T convert(AppVar<? extends Object> appVar);
	
	
	public static class AppString extends AppVar<String>{
		public AppString(String s){
			super(s);
		}

		public boolean instance(AppVar<? extends Object> appVar) {
			return appVar instanceof AppString;
		}

		public String convert(AppVar<? extends Object> appVar) {
			if (instance(appVar))
				return ((AppString)appVar).get();
			return null;
		}

		@Override
		public String getType() {
			return "String";
		}
	}
	
	public static class AppBool extends AppVar<Boolean>{
		public static final AppBool TRUE = new AppBool(true);
		public static final AppBool FALSE = new AppBool(false);
		private AppBool(Boolean b){
			super(b);
		}
		
		public boolean instance(AppVar<? extends Object> appVar) {
			return appVar instanceof AppBool;
		}

		public Boolean convert(AppVar<? extends Object> appVar) {
			if (instance(appVar))
				return ((AppBool)appVar).get();
			return null;
		}

		@Override
		public String getType() {
			return "Boolean";
		}
	}
	
	public static class AppDouble extends AppVar<Double>{
		public AppDouble(Double d){
			super(d);
		}
		
		public boolean instance(AppVar<? extends Object> appVar) {
			return appVar instanceof AppDouble;
		}

		public Double convert(AppVar<? extends Object> appVar) {
			if (instance(appVar))
				return ((AppDouble)appVar).get();
			return null;
		}

		@Override
		public String getType() {
			return "Double";
		}
	}
	
	
	
	public static class AppInt extends AppVar<Integer>{
		public AppInt(Integer i){
			super(i);
		}
		
		public static boolean instance(AppVar<? extends Object> appVar) {
			return appVar instanceof AppInt;
		}

		public static Integer convert(AppVar<? extends Object> appVar) {
			if (instance(appVar))
				return ((AppInt)appVar).get();
			return null;
		}
	}
	
//	public static class AppVarName extends AppVar<AppVar<? extends Object>>{
//		String name;
//		public AppVarName(String name, AppVar<? extends Object> arg) {
//			super(arg);
//			this.name = name;
//		}
//		
//		public AppVar<? extends Object> eval(){ 
//			return this.get();
//		}
//		
//		public static boolean instance(AppVar<? extends Object> appVar) {
//			return appVar instanceof AppVarName;
//		}
//	}
	
	public static class AppNull extends AppVar<Object>{
		public static final AppNull NULL = new AppNull();
		private AppNull(){
			super(null);
		}
	}
	
}


