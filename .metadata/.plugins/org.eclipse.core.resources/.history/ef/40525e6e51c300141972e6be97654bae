package behaviorClassification;

public class DataTable {

	private double[][] entries;
	private String[] headers;
	
	
	public DataTable(double[][] entries, String[] headers) {
		super();
		this.entries = entries;
		this.headers = headers;
	}
	
	
	public double[][] getEntries() {
		return entries;
	}
	public String[] getHeaders() {
		return headers;
	}
	
	public boolean isEmpty(){
		return entries.length==0 || entries[0].length==0;
	}
	
	//@require !this.isEmpty()
	public int getNumRows(){
		return entries[0].length;
	}
	
	public int getNumCols(){
		return entries.length;
	}
	
	//Returns a vector of means for each data column
	public double[] getMeanVec(){
		double[] out = new double[getNumCols()];
		for (int i=0; i<out.length; i++)
			out[i] = MyStats.mean(entries[i]);
		return out;
	}
	
	//Returns a vector of standard deviations for each data column
	public double[] getStdVec(){
		double[] out = new double[getNumCols()];
		for (int i=0; i<out.length; i++)
			out[i] = MyStats.std(entries[i]);
		return out;
	}
	
	//Creates a version of this table where each column is normalized
	public DataTable getScaledTable(){
		double[][] newEntries = new double[getNumCols()][getNumRows()];
		for (int i=0; i<getNumCols(); i++)
			newEntries[i] = MyStats.scale(this.entries[i]);
		return new DataTable(newEntries, this.headers.clone());
	}
	
}
