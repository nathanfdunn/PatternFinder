package ui;

import java.util.HashMap;

import patternDetection.SimpleTokenStream;

public class CommandApp {

	private IInputReader input;
	private boolean quit;
	private HashMap<String, AppVar<? extends Object>> variables;
	
//	private static final AppVar<? extends Object> 
	
	public void execute(String cmd){
		
		
	}
	
	
	
//	public AppVar<? extends Object> eval(String functionName, String[] args){
//		
//	}
	
	
	
	
	public AppVar<? extends Object> eval(String s){
		int lParenInd = s.indexOf('(');
		int rParenInd = s.lastIndexOf(')');
		
		if (lParenInd == -1 || rParenInd == -1){
			//Do stuff for literal eval
		}else{
			//Do stuff for expression evaluation
		}
			
		
	}
	
	public void run(){
		while (!quit){
			String cmd = input.getInput();
			execute(cmd);
		}
	}
	
	private String[] parseCommand(String cmd){
		return cmd.split("\\s+");
	}
	
	private AppVar<? extends Object> set(String varName, AppVar<? extends Object> obj ){
		variables.put(varName, obj);
		return obj;
	}
	
	private void quit(){
		quit = true;
	}
	
//	private AppVar<SimpleTokenStream> tokenize()
	
	
	
}




