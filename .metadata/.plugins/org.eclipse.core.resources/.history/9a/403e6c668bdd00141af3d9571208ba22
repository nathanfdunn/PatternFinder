package ui;

import patternDetection.Behavior;
import patternDetection.Interval;
import patternDetection.Pattern;
import patternDetection.SimpleClause;

public class PatternParser {

	
	public static boolean isValid(String str){
		int preSucSepInd = str.indexOf(Pattern.PRE_SUC_SEP);
		if (preSucSepInd < 1)		//if not there or if first charactern or earlier
			return false;
		int winSepInd = str.indexOf(Interval.STA_END_SEP);
		if (preSucSepInd < preSucSepInd+2)	//if not there or if less than 2 chars between ~ and :
			return false;
		int 
	}
	
	public static boolean isNumeric(String str){
		try{
			Integer.parseInt(str);
		}catch(Exception e){
			return false;
		}
		return true;
	}
	
	public static int parseInt(String str){
		try{
			return Integer.parseInt(str);
		}catch(Exception e){
			e.printStackTrace();
		}
		throw new Error("Not parseable");
	}
	
	public static Pattern parsePattern(String str){
		
		String[] preRest = str.split(Pattern.PRE_SUC_SEP);
		
		
	}
	
	public static Interval parseInterval(String str){
		
	}
	
	public static SimpleClause parseClause(String str){
		
	}
	
	public static Behavior parseBehavior(String str){
		
	}
}






