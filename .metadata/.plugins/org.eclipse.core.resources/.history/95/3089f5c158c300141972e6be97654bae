package behaviorClassification;

import java.util.ArrayList;


public class KnnModel {
	
	private DataTable trainingData;
	private String[] trainingClassifications;
	private double[] meanVec;
	private double[] stdVec;
	
	private String[] classes;
	private int k = 10;
	private double gamma = 0;
	
	public void setK(int k) {
		this.k = k;
	}

	public void setGamma(double gamma) {
		this.gamma = gamma;
	}

	public void train(DataTable trainingData, String[] classifications){
		if (trainingData.isEmpty())
			throw new Error("Empty Training Data");
		if (trainingData.getNumRows() != classifications.length)
			throw new Error("Incorrect number of classifications");
		
		this.meanVec = trainingData.getMeanVec();
		this.stdVec = trainingData.getStdVec();
		this.classes = extractClasses(classifications);
		this.trainingData = trainingData.getScaledTable();
	}
	
	//Returns an array containing only the unique strings in classifications
	private String[] extractClasses(String[] classifications){
		ArrayList<String> unique = new ArrayList<String>();
		for (String s : classifications){
			boolean contained = false;
			for (String s2 : unique)
				if (s.equals(s2)) contained = true;
			if (!contained)
				unique.add(s);
		}
		String[] out = new String[unique.size()];
		for (int i=0; i<out.length; i++)
			out[i] = unique.get(i);
		return out;
	}
	
	public String[] classify(DataTable newData){
		if (trainingData == null ) 
			throw new Error("Model hasn't been trained yet");
		//Also check that the DataTables are compatible
		
	}
	
	public String classify(double[] featureVec){
		
	}
	
	private double[] scaleFeatureVec(double[] featureVec){
		return MyStats.scale(featureVec, meanVec, stdVec);
	}
	
	private String vote(double[] featureVec);
	
}
